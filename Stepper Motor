//Declare pin functions on Redboard
#define stp 2
#define dir 3
#define MS1 4
#define MS2 5
#define EN 6

//Declare variables for functions
char user_input;
float x;
float steps;
float mm;
int y;
int state;

void setup() {
  pinMode(stp, OUTPUT);
  pinMode(dir, OUTPUT);
  pinMode(MS1, OUTPUT);
  pinMode(MS2, OUTPUT);
  pinMode(EN, OUTPUT);
  resetEDPins();       //Set step, direction, microstep and enable pins to default states
  Serial.begin(9600);  //Open Serial connection for debugging
  Serial.println("Begin motor control");
  Serial.println();
  //Print function list for user selection
  Serial.println("Enter number for control option:");
  Serial.println("1. Up 7mm");
  Serial.println("2. Down 7mm");
  Serial.println();
}

//Main loop
void loop() {
  while (Serial.available()) {
    user_input = Serial.read();  //Read user input and trigger appropriate function
    digitalWrite(EN, LOW);       //Pull enable pin low to allow motor control

    if (user_input == '1') {
      SmallStepMode();
    } else if (user_input == '2') {
      ReverseSmallStepMode();
    } else if (user_input == '3') {
      resetEDPins();
    } else {
      Serial.println("Invalid option entered.");
    }
    resetEDPins();
  }
}


//Reset Easy Driver pins to default states
void resetEDPins() {
  digitalWrite(stp, LOW);
  digitalWrite(dir, LOW);
  digitalWrite(MS1, LOW);
  digitalWrite(MS2, LOW);
  digitalWrite(EN, HIGH);
}



//Small step Up
void SmallStepMode() {

  digitalWrite(dir, LOW);   //Pull direction pin low to move "forward"
  digitalWrite(MS1, LOW);  //Pull MS1, and MS2 high to set logic to 1/8th microstep resolution
  digitalWrite(MS2, HIGH);
  for (x = 1; x < 701; x++)  //Loop the forward stepping enough times for motion to be visible
  {
    Serial.print(x); Serial.println(" Steps"); 
    mm = x/100;
    Serial.print(mm); Serial.println(" mm");
    digitalWrite(stp, HIGH);  //Trigger one step forward
    delay(8);
    digitalWrite(stp, LOW);  //Pull step pin low so it can be triggered again
    delay(1);
  }
  Serial.println();
}




//Small step Down
void ReverseSmallStepMode() {

  digitalWrite(dir, HIGH);   //Pull direction pin low to move "forward"
  digitalWrite(MS1, LOW);  //Pull MS1, and MS2 high to set logic to 1/8th microstep resolution
  digitalWrite(MS2, HIGH);
  for (x = 1; x < 701; x++)  //Loop the forward stepping enough times for motion to be visible
  {
    Serial.print(x); Serial.println(" Steps"); 
    mm = x/100;
    Serial.print(mm); Serial.println(" mm");
    digitalWrite(stp, HIGH);  //Trigger one step forward
    delay(8);
    digitalWrite(stp, LOW);  //Pull step pin low so it can be triggered again
    delay(1);
  }
  Serial.println();
}
